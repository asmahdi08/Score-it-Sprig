/*
First time? Check out the tutorial game:
https://sprig.hackclub.com/gallery/getting_started

@title: Score it
@author: 
@tags: []
@addedOn: 2024-00-00
*/

const player = "p"
const goal_u = "u"
const goal_l = "l"
const goal_r = "r"
const green = "g"
const black = "b"
const obstacle = "o"
const level1 = map`
bbbbbbbbbbbbb
ggggggggggggg
ggggglurggggg
gggggggoggggg
ggggggggggggg
ggggggggggggg
ggggggggggggg
ggggggggggggg
ggggggpgggggg
uuuuuuuuuuuuu`
const level2 = map`
bbbbbbbbbbbbb
ggggggggggggg
ggggglurggggg
ggggggooggggg
ggggggggggggg
ggggggggggggg
ggggggggggggg
ggggggggggggg
ggggggpgggggg
uuuuuuuuuuuuu`
const level3 = map`
bbbbbbbbbbbbb
ggggggggggggg
ggggglurggggg
ggggggogggggg
ggggggggggggg
ggggggggggggg
ggggggggggggg
ggggggggggggg
ggggggpgggggg
uuuuuuuuuuuuu`
const level4 = map`
bbbbbbbbbbbbb
ggggggggggggg
gggluuuuurggg
gggogoooogggg
ggggggggggggg
ggggggggggggg
ggggggggggggg
ggggggggggggg
ggggggpgggggg
uuuuuuuuuuuuu`
const level5 = map`
bbbbbbbbbbbbb
ggggggggggggg
ggggglurggggg
ggggggooggggg
ggggggggggggg
ggggggggggggg
ggggggggggggg
ggggggggggggg
ggggggpgggggg
uuuuuuuuuuuuu`
const level6 = map`
bbbbbbbbbbbbb
ggggggggggggg
gggluuuuurggg
gggogoooogggg
ggggggggggggg
ggggggggggggg
ggggggggggggg
ggggggggggggg
ggggggpgggggg
uuuuuuuuuuuuu`
const backgroundTune = tune`
410.958904109589: B4~410.958904109589 + A4~410.958904109589 + G4~410.958904109589 + C4^410.958904109589 + E5^410.958904109589,
410.958904109589: F4~410.958904109589 + E4~410.958904109589,
410.958904109589: B4~410.958904109589 + A4~410.958904109589 + G5/410.958904109589,
410.958904109589: D5~410.958904109589 + E5~410.958904109589 + F5~410.958904109589 + C4^410.958904109589,
410.958904109589: G4~410.958904109589 + F4~410.958904109589 + C4^410.958904109589,
410.958904109589: C5~410.958904109589 + B4~410.958904109589 + E5^410.958904109589,
410.958904109589: C5~410.958904109589 + C4^410.958904109589 + E5^410.958904109589,
410.958904109589: F4~410.958904109589 + C4^410.958904109589,
410.958904109589: A4~410.958904109589 + G4~410.958904109589 + F4~410.958904109589 + G5/410.958904109589,
410.958904109589: F4~410.958904109589 + C4^410.958904109589,
410.958904109589: B4~410.958904109589 + E4~410.958904109589 + D4~410.958904109589 + C4^410.958904109589,
410.958904109589: F4~410.958904109589 + E5^410.958904109589,
410.958904109589: A4~410.958904109589 + G4~410.958904109589 + C4^410.958904109589 + E5^410.958904109589,
410.958904109589: A4~410.958904109589 + B4~410.958904109589 + E4~410.958904109589 + D4~410.958904109589 + C4^410.958904109589,
410.958904109589: A4~410.958904109589 + G5/410.958904109589,
410.958904109589: A4~410.958904109589 + E5~410.958904109589 + D5~410.958904109589 + C4^410.958904109589,
410.958904109589: C4^410.958904109589,
410.958904109589: A4~410.958904109589 + B4~410.958904109589 + F4~410.958904109589 + E5^410.958904109589,
410.958904109589: F4~410.958904109589 + C4^410.958904109589 + E5^410.958904109589,
410.958904109589: C4^410.958904109589,
410.958904109589: A4~410.958904109589 + G4~410.958904109589 + B4~410.958904109589 + G5/410.958904109589,
410.958904109589: A4~410.958904109589 + C4^410.958904109589,
410.958904109589: G4~410.958904109589 + C4^410.958904109589,
410.958904109589: B4~410.958904109589 + A4~410.958904109589 + E5^410.958904109589,
410.958904109589: D5~410.958904109589 + F4~410.958904109589 + G4~410.958904109589 + C4^410.958904109589 + E5^410.958904109589,
410.958904109589: E4~410.958904109589 + C4^410.958904109589,
410.958904109589: D4~410.958904109589 + G5/410.958904109589,
410.958904109589: G4~410.958904109589 + B4~410.958904109589 + A4~410.958904109589 + C4^410.958904109589,
410.958904109589: D5~410.958904109589 + C4^410.958904109589 + E5^410.958904109589,
410.958904109589: A4~410.958904109589 + F4~410.958904109589 + E4~410.958904109589 + E5^410.958904109589,
410.958904109589: F5~410.958904109589 + E5~410.958904109589 + D5~410.958904109589 + C4^410.958904109589,
410.958904109589: A4~410.958904109589 + B4~410.958904109589 + G4~410.958904109589 + C4^410.958904109589 + G5/410.958904109589`
const goalTune = tune`
94.9367088607595: C4/94.9367088607595 + G4/94.9367088607595 + D5-94.9367088607595,
94.9367088607595: D4/94.9367088607595 + A4/94.9367088607595 + E5-94.9367088607595,
94.9367088607595: E4/94.9367088607595 + B4/94.9367088607595 + F5-94.9367088607595,
94.9367088607595: F4/94.9367088607595 + C5/94.9367088607595 + G5-94.9367088607595,
94.9367088607595: G4/94.9367088607595 + D5/94.9367088607595 + A5-94.9367088607595,
94.9367088607595: A4/94.9367088607595 + E5/94.9367088607595 + B5-94.9367088607595,
94.9367088607595: B4/94.9367088607595 + F5/94.9367088607595,
94.9367088607595: G5/94.9367088607595 + C5/94.9367088607595,
94.9367088607595: F5/94.9367088607595 + B4/94.9367088607595,
94.9367088607595: E5/94.9367088607595 + A4/94.9367088607595 + B5-94.9367088607595,
94.9367088607595: D5/94.9367088607595 + G4/94.9367088607595 + A5-94.9367088607595,
94.9367088607595: C5/94.9367088607595 + F4/94.9367088607595 + G5-94.9367088607595,
94.9367088607595: B4/94.9367088607595 + E4/94.9367088607595 + F5-94.9367088607595,
94.9367088607595: A4/94.9367088607595 + D4/94.9367088607595 + E5-94.9367088607595,
94.9367088607595: G4/94.9367088607595 + C4/94.9367088607595 + D5-94.9367088607595,
94.9367088607595: C5-94.9367088607595,
1518.987341772152`
const loseTune = tune`
153.0612244897959: E5^153.0612244897959,
153.0612244897959: D5~153.0612244897959,
153.0612244897959: C5^153.0612244897959,
153.0612244897959: B4~153.0612244897959,
153.0612244897959: G4^153.0612244897959,
153.0612244897959: F4~153.0612244897959,
153.0612244897959: E4^153.0612244897959,
153.0612244897959: D4~153.0612244897959,
153.0612244897959: C4^153.0612244897959,
3520.408163265306`
let currentmap = 1
let vainterval

const playback = playTune(backgroundTune, Infinity)

setLegend(
  [player, bitmap`
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDD0000DDDDDD
DDDD00022000DDDD
DDDD00222000DDDD
DDD0020202200DDD
DDD0222000220DDD
DDD0222002020DDD
DDD0020202200DDD
DDDD00222020DDDD
DDDD00022000DDDD
DDDDDD0000DDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD`],
  [goal_u, bitmap`
0000000000000000
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD`],
  [goal_l, bitmap`
DDDD000000000000
DD00DDDDDDDDDDDD
D0DDDDDDDDDDDDDD
D0DDDDDDDDDDDDDD
0DDDDDDDDDDDDDDD
0DDDDDDDDDDDDDDD
0DDDDDDDDDDDDDDD
0DDDDDDDDDDDDDDD
0DDDDDDDDDDDDDDD
0DDDDDDDDDDDDDDD
0DDDDDDDDDDDDDDD
0DDDDDDDDDDDDDDD
0DDDDDDDDDDDDDDD
0DDDDDDDDDDDDDDD
0DDDDDDDDDDDDDDD
0DDDDDDDDDDDDDDD`],
  [goal_r, bitmap`
000000000000DDDD
DDDDDDDDDDDD00DD
DDDDDDDDDDDDDD0D
DDDDDDDDDDDDDD0D
DDDDDDDDDDDDDDD0
DDDDDDDDDDDDDDD0
DDDDDDDDDDDDDDD0
DDDDDDDDDDDDDDD0
DDDDDDDDDDDDDDD0
DDDDDDDDDDDDDDD0
DDDDDDDDDDDDDDD0
DDDDDDDDDDDDDDD0
DDDDDDDDDDDDDDD0
DDDDDDDDDDDDDDD0
DDDDDDDDDDDDDDD0
DDDDDDDDDDDDDDD0`],
  [green, bitmap`
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD`],
  [obstacle, bitmap`
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDD0DDDDDDDD
DDDDDD090DDDDDDD
DDDDD09990DDDDDD
DDDD0999990DDDDD
DDD099999990DDDD
DD09999999990DDD
D0999999999990DD
011111116666660D
000000000000000D`],
  [black, bitmap`
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000`]
)

setSolids([player, goal_u, goal_l, goal_r, obstacle, black])

let level = 0
const levels = [
  map`
ggggggggggg
gggglurgggg
ggggggggggg
ggggggggggg
ggggggggggg
ggggggggggg
ggggggggggg
ggggggggggg
uuuuuuuuuuu`,
  level1,
  level2,
  level3,
  level4,
  level5,
  level6,
]

setMap(levels[1])

setPushables({
  [player]: []
})

setBackground("g")

let movcon = 1
let ycon = 0
let turner = 0
let movinterval = 400

let levtext = addText(("Lvl: " + currentmap), options = { x:0, y:0, color:color`9` })

function checkPlayerCollision(obj) {
  if (getFirst(player).x == getFirst(obj).x && getFirst(player).y == (getFirst(obj).y + 1)) {
    return 1;
  } else {
    return 0;
  }
}
function changeLevel(levelnum){
  
  setMap(levels[levelnum])
  ycon = 0
  movcon =1
  turner =0
  currentmap += 1
  if(levelnum == 5 || levelnum == 6) {
    movinterval = 100
  }
  vainterval = setInterval(mainfunc,movinterval)
  clearText(levtext)
  levtext = addText(("Lvl: " + currentmap), options = { x:0, y:0, color:color`9` })
  
  
}

function mainfunc(){
      if (getFirst(player).x == 0) {
      turner = 1;
    } else if (getFirst(player).x == 10) { turner = 0; }
    if (turner == 1) { getFirst(player).x += 1 * movcon; } else { getFirst(player).x -= 1 * movcon; }
    if (movcon == 0) {
      if (checkPlayerCollision(obstacle) == 1) {
        console.log("nah you missed")
        clearInterval(vainterval)
        playback.end()
        playTune(loseTune)
      } else if (getFirst(player).y == 1) {
        console.log("nah you missed")
        clearInterval(vainterval)
        playback.end()
        playTune(loseTune)
      }
      if (checkPlayerCollision(goal_u) == 1 || checkPlayerCollision(goal_l) == 1 || checkPlayerCollision(goal_r) == 1) {
        console.log("GOOOOOOAAAALL");
        playTune(goalTune)
        clearInterval(vainterval)
        if(currentmap==6){
          addText("Game Finished", options = { x:5, y:5, color:color`9` })
        }else{
          changeLevel(currentmap + 1)
        }
        
      }
    }
}

if (movcon == 1) {
  vainterval = setInterval(mainfunc, movinterval)
}

function mover() { getFirst(player).y -= 1*ycon; }
let initmover;

onInput("w", () => {
  ycon = 1
  movcon = 0
  const automover = setInterval(mover, 100)
})


afterInput(() => {
  }

)